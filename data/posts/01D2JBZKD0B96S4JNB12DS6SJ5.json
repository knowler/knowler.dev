{
  "slug": "rust-for-a-rusty-game-developer",
  "title": "Rust For A Rusty Game Developer",
  "publishedAt": "2019-01-31T16:31:00.000Z",
  "id": "01D2JBZKD0B96S4JNB12DS6SJ5",
  "published": true,
  "html": "<p>Rust is my first foray into a systems programming language since\nhighschool and even then I never went in past my toes. This is\nthe introduction of a series of posts Iâ€™ll make as I document my\nexperience of learning Rust.</p>\n<h2 id=\"the-aspiring-game-developer\">The Aspiring Game Developer</h2>\n<p>I remember wanting to learn C++, because that's what the\nprofessional game developers were using. I was an impatient\nteenager though â€” I just wanted to make games â€” and I ended up\nsettling with an ActionScript 3 library called <a href=\"http://useflashpunk.net\">FlashPunk</a>. I\nused AS3 a lot and did end up learning a lot of foundational\nprogramming concepts through it (it takes a lot from Java; AS2\nwas more JavaScript-y). When I went to college I jumped back to\nthe web (my stomping ground), because there werenâ€™t a lot of\nways I knew how to use my game development skills. Everyone\nneeded a website, so I embraced my new role as everyoneâ€™s web\ndeveloper.</p>\n<h2 id=\"why-a-systems-programming-language\">Why a Systems Programming Language?</h2>\n<p>Over the last 4-5 years, I have become obsessed with speed and\nperformance. How did I become this way? By living in a rural\ntown in the middle of nowhere Saskatchewan for 4 years. When I\ngot there I didnâ€™t have any cell reception and the WiFi was\nhorrible and though it did improve during my time there, I\nbecame keenly aware of the frustrations of living with a\nsub-sub-par Internet connection. This experience has been\nguiding for me as I dive deeper into programming. <strong>I want to\nbuild products that everyone, anywhere can access â€” no matter\nwhat difficulties may befall them.</strong> That brings me to what Iâ€™ve\nnoticed. A theme in a lot of software these days is a lack of\nperformance. Much of modern software is web-based in some way\nand that's really great if you are a web developer or need to\nship software to as many targets as possible, but please stop\nusing so much memory. Yes, Iâ€™m looking at you <em>Electron</em> ðŸ‘€.\nAnyway, Iâ€™d like to learn a systems programming language so I\ncan build more efficient software. <code>&#x3C;/rant></code></p>\n<h2 id=\"why-not-c\">Why Not C++?</h2>\n<p>When I was deciding to into a deeper programming language, I\nfirst jumped to C++ because I had some familarity with it and it\nis so popular. It was hard to feel like I was getting anywhere\nafter a week though. I had become accustomed to the ecosystems\nthat I knew from Node and PHP, but there seemed to be no such\nthing for C++. I realized that the language was pre-Internet and\nit didnâ€™t have the opportunity for a centralized ecosystem to\ncatch on â€” by the time the Internet came around everyone had\ndeveloped their own ways of managing dependencies. <strong>Attempting\nto learn C++ was a lonely experience.</strong> I needed something that\nhad a thriving ecosystem if I was going to catch any sort of\nmomentum in my learning.</p>\n<h2 id=\"why-rust\">Why Rust?</h2>\n<p>I had heard of Rust through following <a href=\"https://twitter.com/yoshuawuyts\">Yoshua Wuyts on\nTwitter</a>. I had discovered him\nthrough being a fly on the wall in the communities that\nsurrounded Tachyons and functional CSS. Since I trusted his\nfascination with performance, I became interested in Rust and it\nwas the first language that came to mind when I started feeling\nlonely learning C++. Rust was very much the opposite of what I\nfound with C++: the community is thriving, there are plenty of\nofficial, well maintained resources for learning the language,\nthe ecosystem is well established â€” despite being a relatively\nyoung language â€” and the tooling is fantastic. <strong>While Rust can\nfeel like a decently steep learning curve, the community and\necosystem cushion that, make it easy to gain momentum when\nlearning.</strong></p>\n<h2 id=\"resources-ive-found-helpful\">Resources Iâ€™ve Found Helpful</h2>\n<p>The following are some resources Iâ€™ve found helpful as Iâ€™ve\nlearnt Rust. Let it be a guide to the Rust ecosystem if youâ€™re\nbrand new.</p>\n<h3 id=\"books\">Books</h3>\n<p>I began reading <em><a href=\"https://doc.rust-lang.org/book\">The Rust Programming Language</a></em> in August.\nThough, as I read, I did find it difficult to figure out what I\ncould use Rust for that wasnâ€™t too far fetched for a beginner\n(i.e. making a game), the book did include some great exercises\nwhich helped me get the underlying theories and values which are\ncore to Rust as a language. The final project in the book was a\nmulti-threaded web server and it was my motivation to finish\nreading ðŸ˜‚. Overall, I would recommend the book to anyone\nwanting to begin with Rust. Sure you might want something that\nis more practical and has less theory, but if you take the time\nto read the book, youâ€™ll understand why Rust is the way it is.\nAfter reading the book, I discovered <em><a href=\"https://doc.rust-lang.org/rust-by-example\">Rust By Example</a></em> which\nsatisfies the desire for a resource that is more practical and\nstraightforward; a great reference to keep while programming in\nRust.</p>\n<h3 id=\"documentation\">Documentation</h3>\n<p><a href=\"https://docs.rs\">Docs.rs</a> is amazing. They have done such a good job of\ncentralizing all of the documentation, information, and links\nregarding any crate you pick up.</p>\n<p><img src=\"/images/docs-rs-crate-overview.png\" alt=\"\"></p>\n<h2 id=\"projects\">Projects</h2>\n<p>So far, the most immediate need that Iâ€™ve discovered that I can\nuse Rust for is commandline-interfaces. I have more than a few\nBash scripts lying around which Iâ€™ve been wanting to refactor\nand Iâ€™ve begun using Rust for that. So far Iâ€™ve been using\n<a href=\"https://github.com/TeXitoi/structopt\">StructOpt</a> as a library for building <a href=\"https://github.com/knowler/roots-cli-rust\">quick little CLIs for\neveryday tasks</a>.</p>\n<p>This blog project in itself has been a fun chance to learn Rust.\nI chose <a href=\"https://getzola.org\">Zola</a> as the static site generator and it's been a\npretty smooth experience so far. It's able to deploy to Netlify\nwhich is always great. As a little fun project I built <a href=\"https://github.com/knowler/words#cli-helper\">a CLI for\nscaffolding new posts</a>,\nwhich should serve me as I continue to blog. I've found <a href=\"https://tera.netlify.com\">Tera</a>\nâ€” a Jinja inspired templating language to be a great asset for\nthat type of project.</p>\n<h2 id=\"future-goals\">Future Goals</h2>\n<p>I think as a big goal, Iâ€™d love to build a 2d platformer. Iâ€™ve\nalways loved 2d games and that's much of what I built when I\nused to make games.</p>\n"
}