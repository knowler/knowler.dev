main > .h-entry ~ aside {
	margin-block-start: 2rem;
	border-block-start: 0.0625em solid CanvasText;
	max-inline-size: 52ch;
}

main > .h-entry ~ aside li a {
	word-break: break-all;
}

.h-entry h1 {
	font-size: clamp(1.5rem, 1.5rem + 4vw, 4rem);
	margin-block-end: 0.2em;
	max-inline-size: 18ch;
	text-wrap: pretty;
	line-height: 1.1;
}

.h-entry h2 {
	font-size: clamp(1.25rem, 1.25rem + 4vw, 2.5rem);
	max-inline-size: 28ch;
	line-height: 1.1;
	text-wrap: pretty;
}

.h-entry h3 {
	font-size: clamp(1.125rem, 1.125rem + 4vw, 2rem);
	max-inline-size: 32ch;
	line-height: 1.1;
	text-wrap: pretty;
}

.h-entry h1 + p {
	margin-block-start: 0.5em;
	margin-block-end: 2rem;
	font-variation-settings: "wdth" 110;
	font-size: clamp(1rem, 0.9rem + 1vw, 1.5rem);
}

.h-entry :is(p, li) {
	font-variation-settings: "wdth" 90;
	font-size: clamp(1rem, 0.8rem + 4vw, 1.25rem);
	font-weight: 250;
	max-inline-size: 64ch;
	letter-spacing: 0.01em;
}

.h-entry :is(p, li) > strong {
	font-weight: 450;
}

.h-entry :is(p, li) > code {
	font-size: 0.9em;
	display: inline-block;
	padding-inline: 0.25em;
	padding-block: -0.125em;
	margin-block: -0.125em;
	border-radius: 0.25em;
	word-spacing: -0.1em;

	background: #fff;
	color: #005cc5;
}

@media (prefers-color-scheme: dark) {
	.h-entry :is(p, li) > code {
		background: #0d1117;
		color: #79c0ff;
	}
}

pre {
  background: #ffffff;
	padding: var(--padding);
	margin-inline: calc(-1 * var(--padding));
	font-size: clamp(0.7rem, 0.7rem + 0.5vw, 1.125rem);
	inline-size: calc(100% + (2 * var(--padding)));
	overflow-x: auto;
	line-height: 2;
}

.hljs {
  color: #24292e;
  background: #ffffff;
}

.hljs-doctag,
.hljs-keyword,
.hljs-meta .hljs-keyword,
.hljs-template-tag,
.hljs-template-variable,
.hljs-type,
.hljs-variable.language_ {
  /* prettylights-syntax-keyword */
  color: #d73a49;
}

.hljs-title,
.hljs-title.class_,
.hljs-title.class_.inherited__,
.hljs-title.function_ {
  /* prettylights-syntax-entity */
  color: #6f42c1;
}

.hljs-attr,
.hljs-attribute,
.hljs-literal,
.hljs-meta,
.hljs-number,
.hljs-operator,
.hljs-variable,
.hljs-selector-attr,
.hljs-selector-class,
.hljs-selector-id {
  /* prettylights-syntax-constant */
  color: #005cc5;
}

.hljs-regexp,
.hljs-string,
.hljs-meta .hljs-string {
  /* prettylights-syntax-string */
  color: #032f62;
}

.hljs-built_in,
.hljs-symbol {
  /* prettylights-syntax-variable */
  color: #e36209;
}

.hljs-comment,
.hljs-code,
.hljs-formula {
  /* prettylights-syntax-comment */
  color: #6a737d;
}

.hljs-name,
.hljs-quote,
.hljs-selector-tag,
.hljs-selector-pseudo {
  /* prettylights-syntax-entity-tag */
  color: #22863a;
}

.hljs-subst {
  /* prettylights-syntax-storage-modifier-import */
  color: #24292e;
}

.hljs-section {
  /* prettylights-syntax-markup-heading */
  color: #005cc5;
  font-weight: bold;
}

.hljs-bullet {
  /* prettylights-syntax-markup-list */
  color: #735c0f;
}

.hljs-emphasis {
  /* prettylights-syntax-markup-italic */
  color: #24292e;
  font-style: italic;
}

.hljs-strong {
  /* prettylights-syntax-markup-bold */
  color: #24292e;
  font-weight: bold;
}

.hljs-addition {
  /* prettylights-syntax-markup-inserted */
  color: #22863a;
  background-color: #f0fff4;
}

.hljs-deletion {
  /* prettylights-syntax-markup-deleted */
  color: #b31d28;
  background-color: #ffeef0;
}

.hljs-char.escape_,
.hljs-link,
.hljs-params,
.hljs-property,
.hljs-punctuation,
.hljs-tag {
  /* purposely ignored */
}

@media (prefers-color-scheme: dark) {
	pre {
		background: #0d1117;
	}

	.hljs {
		color: #c9d1d9;
		background: #0d1117;
	}

	.hljs-doctag,
	.hljs-keyword,
	.hljs-meta .hljs-keyword,
	.hljs-template-tag,
	.hljs-template-variable,
	.hljs-type,
	.hljs-variable.language_ {
		/* prettylights-syntax-keyword */
		color: #ff7b72;
	}

	.hljs-title,
	.hljs-title.class_,
	.hljs-title.class_.inherited__,
	.hljs-title.function_ {
		/* prettylights-syntax-entity */
		color: #d2a8ff;
	}

	.hljs-attr,
	.hljs-attribute,
	.hljs-literal,
	.hljs-meta,
	.hljs-number,
	.hljs-operator,
	.hljs-variable,
	.hljs-selector-attr,
	.hljs-selector-class,
	.hljs-selector-id {
		/* prettylights-syntax-constant */
		color: #79c0ff;
	}

	.hljs-regexp,
	.hljs-string,
	.hljs-meta .hljs-string {
		/* prettylights-syntax-string */
		color: #a5d6ff;
	}

	.hljs-built_in,
	.hljs-symbol {
		/* prettylights-syntax-variable */
		color: #ffa657;
	}

	.hljs-comment,
	.hljs-code,
	.hljs-formula {
		/* prettylights-syntax-comment */
		color: #8b949e;
	}

	.hljs-name,
	.hljs-quote,
	.hljs-selector-tag,
	.hljs-selector-pseudo {
		/* prettylights-syntax-entity-tag */
		color: #7ee787;
	}

	.hljs-subst {
		/* prettylights-syntax-storage-modifier-import */
		color: #c9d1d9;
	}

	.hljs-section {
		/* prettylights-syntax-markup-heading */
		color: #1f6feb;
		font-weight: bold;
	}

	.hljs-bullet {
		/* prettylights-syntax-markup-list */
		color: #f2cc60;
	}

	.hljs-emphasis {
		/* prettylights-syntax-markup-italic */
		color: #c9d1d9;
		font-style: italic;
	}

	.hljs-strong {
		/* prettylights-syntax-markup-bold */
		color: #c9d1d9;
		font-weight: bold;
	}

	.hljs-addition {
		/* prettylights-syntax-markup-inserted */
		color: #aff5b4;
		background-color: #033a16;
	}

	.hljs-deletion {
		/* prettylights-syntax-markup-deleted */
		color: #ffdcd7;
		background-color: #67060c;
	}

	.hljs-char.escape_,
	.hljs-link,
	.hljs-params,
	.hljs-property,
	.hljs-punctuation,
	.hljs-tag {
		/* purposely ignored */
	}
}
